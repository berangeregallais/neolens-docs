"use strict";(self.webpackChunkneolens_docs=self.webpackChunkneolens_docs||[]).push([[3337],{28453:(e,i,t)=>{t.d(i,{R:()=>a,x:()=>l});var n=t(96540);const r={},s=n.createContext(r);function a(e){const i=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(s.Provider,{value:i},e.children)}},38050:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"getting-started/rate-limiting","title":"Rate Limiting","description":"Overview of Neolens API rate limiting policies ensuring performance, security, fair use, and regulatory compliance in healthcare applications.","source":"@site/docs/1-getting-started/rate-limiting.md","sourceDirName":"1-getting-started","slug":"/getting-started/rate-limiting","permalink":"/getting-started/rate-limiting","draft":false,"unlisted":false,"editUrl":"https://github.com/berangeregallais/neolens-docs/tree/main/docs/1-getting-started/rate-limiting.md","tags":[],"version":"current","lastUpdatedBy":"Berangere Gallais","lastUpdatedAt":1755188985000,"frontMatter":{"slug":"rate-limiting","title":"Rate Limiting","description":"Overview of Neolens API rate limiting policies ensuring performance, security, fair use, and regulatory compliance in healthcare applications."},"sidebar":"tutorialSidebar","previous":{"title":"Authentication","permalink":"/getting-started/authentication"},"next":{"title":"Interactive API Overview","permalink":"/api-interactive"}}');var r=t(74848),s=t(28453);const a={slug:"rate-limiting",title:"Rate Limiting",description:"Overview of Neolens API rate limiting policies ensuring performance, security, fair use, and regulatory compliance in healthcare applications."},l=void 0,o={},c=[{value:"Standard Rate Limits",id:"standard-rate-limits",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Custom Limits for Hospital Partners",id:"custom-limits-for-hospital-partners",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Regulatory and Ethical Considerations",id:"regulatory-and-ethical-considerations",level:2}];function d(e){const i={admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(i.p,{children:["To ensure performance, security, and fair usage, the ",(0,r.jsx)(i.strong,{children:"Neolens API"})," enforces strict rate limiting policies. These limits help prevent abuse, guarantee system availability, and align with medical data governance standards, including ",(0,r.jsx)(i.strong,{children:"traceability"}),", ",(0,r.jsx)(i.strong,{children:"compliance"}),", and ",(0,r.jsx)(i.strong,{children:"ethical access"})," to sensitive imaging data."]}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:["Rate limiting is not just a technical safeguard \u2014 it's also key to ensuring ",(0,r.jsx)(i.strong,{children:"traceability"}),", ",(0,r.jsx)(i.strong,{children:"auditability"}),", and ",(0,r.jsx)(i.strong,{children:"responsible AI"})," usage in healthcare applications."]}),"\n"]}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h2,{id:"standard-rate-limits",children:"Standard Rate Limits"}),"\n",(0,r.jsx)(i.p,{children:"By default, the following limits apply:"}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Client Type"}),(0,r.jsx)(i.th,{children:"Limit"}),(0,r.jsx)(i.th,{children:"Period"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Public API consumers"}),(0,r.jsx)(i.td,{children:"100 requests"}),(0,r.jsx)(i.td,{children:"per minute"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Registered developers"}),(0,r.jsx)(i.td,{children:"1,000 requests"}),(0,r.jsx)(i.td,{children:"per minute"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Hospital partners"}),(0,r.jsx)(i.td,{children:"Custom rate limits"}),(0,r.jsx)(i.td,{children:"per SLA"})]})]})]}),"\n",(0,r.jsxs)(i.p,{children:["If these limits are exceeded, a ",(0,r.jsx)(i.code,{children:"429 Too Many Requests"})," error is returned."]}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsx)(i.admonition,{title:"Optimize your usage",type:"tip",children:(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Batch requests whenever possible."}),"\n",(0,r.jsx)(i.li,{children:"Use caching on client-side apps for read-only endpoints."}),"\n",(0,r.jsx)(i.li,{children:"Schedule heavy workloads during off-peak hours."}),"\n"]})}),"\n",(0,r.jsxs)(i.admonition,{title:"Monitor your rate usage",type:"tip",children:[(0,r.jsx)(i.p,{children:"You can monitor your usage via the response headers:"}),(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.code,{children:"X-RateLimit-Limit"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.code,{children:"X-RateLimit-Remaining"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.code,{children:"X-RateLimit-Reset"})}),"\n"]})]}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h2,{id:"custom-limits-for-hospital-partners",children:"Custom Limits for Hospital Partners"}),"\n",(0,r.jsxs)(i.admonition,{title:"Custom Access Policies",type:"note",children:[(0,r.jsx)(i.p,{children:"For enterprise and hospital partners, rate limits are configurable based on service-level agreements (SLAs). These may include:"}),(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Higher thresholds for high-volume diagnostic tools"}),"\n",(0,r.jsx)(i.li,{children:"Specific bandwidth windows for emergency cases"}),"\n",(0,r.jsx)(i.li,{children:"Time-based throttling for batch jobs"}),"\n"]}),(0,r.jsx)(i.p,{children:"For more information, contact your Neolens account manager."})]}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsx)(i.p,{children:"When the rate limit is exceeded, the API returns:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-json",children:'{\n  "error": "Too Many Requests",\n  "code": 429,\n  "message": "Rate limit exceeded. Try again in 10 seconds."\n}\n'})}),"\n",(0,r.jsxs)(i.p,{children:["Use the ",(0,r.jsx)(i.code,{children:"Retry-After"})," header to implement smart retries and backoff mechanisms."]}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(i.p,{children:"Why am I getting 429 errors even when sending few requests?"}),"\n",(0,r.jsx)(i.admonition,{title:"Possible causes",type:"caution",children:(0,r.jsx)(i.p,{children:"You\u2019re using the public token with multiple clients.\nYou\u2019re making rapid burst calls in under a second.\nBackground jobs or retries may be unintentionally spamming an endpoint."})}),"\n",(0,r.jsx)(i.p,{children:"Check your logs and make sure requests are spaced properly and distributed efficiently across time."}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h2,{id:"regulatory-and-ethical-considerations",children:"Regulatory and Ethical Considerations"}),"\n",(0,r.jsx)(i.p,{children:"In the healthcare domain, rate limiting plays a critical role in:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Protecting infrastructure against overloads that could delay critical diagnoses"}),"\n",(0,r.jsx)(i.li,{children:"Preventing unauthorized access or scraping of sensitive data"}),"\n",(0,r.jsx)(i.li,{children:"Complying with GDPR and healthcare data privacy regulations"}),"\n",(0,r.jsx)(i.li,{children:"Ensuring fair and auditable access across different roles and institutions"}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Need a higher rate limit ? Contact our support team or refer to your SLA."})]})}function h(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);